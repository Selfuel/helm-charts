replicaCount: 1

namespace: selfuel

# Arx URL, main api for the services to communicate with. Do not edit this value.
arx:
  url: https://api.selfuel.digital

# ID of your organization. 
# Example: o_3b2fe2b2-3966-4ba0-88ee-8d5c4840a0a2
organization:
  id: "o_91993764-5124-4295-85c1-e75489319acc"

executor:
  app: executor
  replicaCount: 1
  repository: selfuelhub/executor
  pullPolicy: IfNotPresent
  tag: "latest"
  port: 80
  service:
    name: executor-service
    type: NodePort
    port: 80
    targetPort: 80
  ingress:
    host: ""
    path: "/"
    port: 80
  secret:
    name: executor-secret
    # Basic Auth Username
    USERNAME: ""
    # Basic Auth Password
    PASSWORD: ""
    ENV: "production"
    # Hostname of the runners. 
    RUNNER_HOST: ""
    # Database connection details
    DATABASE_HOST: ""
    DATABASE_PORT: ""
    DATABASE_NAME: ""
    DATABASE_USERNAME: ""
    DATABASE_PASSWORD: ""
    # Prometheus client address
    PROMETHEUS_CLIENT_ADDRESS: ""
    # Slack Webhook URL, used for alerting to slack. Do not edit this value.
    SLACK_HOOK: "https://hooks.slack.com/services/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"
  clusterRole:
    name: executor
  clusterRoleBinding:
    name: executor

certManager:
  enabled: false
  name: letsencrypt-cluster-issuer
  server: https://acme-v02.api.letsencrypt.org/directory
  email: ""
  privateKeySecretRef:
    name: letsencrypt-cluster-issuer-key

runnerHealthchecker:
  app: runner-healthchecker
  replicaCount: 1
  repository: selfuelhub/runner_healthchecker
  version: "latest"
  pullPolicy: IfNotPresent
  tag: "latest"
  port: 80
  secret:
    name: runner-healthchecker-secret
    ENV: "production"
    RUNNER_HEALTHCHECKER_USERNAME: ""
    RUNNER_HEALTHCHECKER_PASSWORD: ""
    RUNNER_HEALTHCHECKER_HOST: ""
  ingress:
    enabled: false
    host: ""
    path: "/"
    port: 80
  service:
    name: runner-healthchecker-service
    type: NodePort
    port: 80
    targetPort: 80
